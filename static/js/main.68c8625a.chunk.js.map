{"version":3,"sources":["Components/Navbar.jsx","Components/data.js","Components/DataTable.jsx","Components/PageWrapper.jsx","Pages/Home.jsx","Pages/NotFound.jsx","Components/DataGraph.jsx","Pages/Token.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","dark","setDark","Box","tag","direction","align","justify","background","pad","left","right","vertical","elevation","style","zIndex","Anchor","as","A","label","href","Clock","type","Button","onClick","icon","Solaris","Moon","amountFormatterUSD","Intl","NumberFormat","currency","minimumFractionDigits","amountFormatterTkn","prop","symbol","format","columns","property","header","primary","render","datum","price","marketCap","volume_tkn","circulatingSupply","MyDataTable","props","useState","tokenList","setTokenList","fetchData","a","fetch","json","then","res","catch","err","console","log","useEffect","horizontal","DataTable","map","c","search","onClickRow","e","navigate","did","data","body","light","footer","pin","fill","sortable","resizeable","PageWrapper","Grid","justifyContent","gap","Home","rows","areas","name","start","end","gridArea","Heading","level","NotFound","WorldMap","color","onSelectPlace","lat","lon","selectColor","hoverColor","alignContent","margin","Rewind","DataGraph","darkTheme","theme","useContext","ThemeContext","graphOptions","lineColor","bottomColor","topColor","lineWidth","title","options","alignLabels","priceScale","position","mode","autoScale","layout","backgroundColor","textColor","fontSize","fontFamily","grid","vertLines","visible","horzLines","localization","timeScale","rightOffset","fixLeftEdge","lockVisibleTimeRangeOnResize","rightBarStaysOnScroll","areaSeries","setAreaSeries","handleData","prices","time","Date","toJSON","value","toLowerCase","autoWidth","getRandomColor","i","Math","floor","random","Token","description","priceOcean","otherDetails","dataKey","dataValue","tokenDetails","setTokenDetails","setErrors","Object","entries","index","arr","Text","size","Paragraph","border","str","replace","charAt","toUpperCase","slice","routes","myTheme","deepMerge","grommet","global","focus","colors","text","App","match","useRoutes","Grommet","cssVars","full","themeMode","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.68c8625a.chunk.js","sourcesContent":["import React from 'react';\nimport { Anchor, Button, Box, Clock, Text } from 'grommet';\nimport { A } from 'hookrouter';\n\nimport { Solaris, Moon } from 'grommet-icons';\n\nexport const Navbar = ({ dark, setDark }) => (\n  <Box\n    tag=\"header\"\n    direction=\"row\"\n    align=\"center\"\n    justify=\"between\"\n    background=\"brand\"\n    pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n    elevation=\"medium\"\n    style={{ zIndex: '1' }}\n  >\n    <Anchor as={A} label=\" Data Market Cap \" href=\"/dmc\" />\n    <Clock type=\"digital\" />\n    <Button\n      onClick={() => {\n        setDark(!dark);\n      }}\n      icon={dark ? <Solaris /> : <Moon />}\n    ></Button>\n  </Box>\n);\n","const amountFormatterUSD = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  minimumFractionDigits: 2,\n});\n\nconst amountFormatterTkn = (prop, symbol) => {\n  const formatter = new Intl.NumberFormat('en-US', {});\n  return formatter.format(prop) + ' ' + symbol;\n};\n\nexport const columns = [\n  { property: '#', header: '#' },\n  {\n    property: 'name',\n    header: 'Name',\n    primary: true,\n  },\n  {\n    property: 'symbol',\n    header: 'Symbol',\n  },\n  {\n    property: 'price',\n    header: 'Price',\n    render: (datum) => amountFormatterUSD.format(datum.price),\n    align: 'end',\n  },\n  {\n    property: 'marketCap',\n    header: 'Market Cap',\n    render: (datum) => amountFormatterUSD.format(datum.marketCap),\n    align: 'end',\n  },\n  {\n    property: 'volume_tkn',\n    header: 'Volume (Token)',\n    align: 'end',\n    render: (datum) => amountFormatterTkn(datum.volume_tkn, datum.symbol),\n  },\n  {\n    property: 'circulatingSupply',\n    header: 'Circulating Supply',\n    align: 'end',\n    render: (datum) =>\n      amountFormatterTkn(datum.circulatingSupply, datum.symbol),\n  },\n];\n","import React, { useState, useEffect } from 'react';\nimport { navigate } from 'hookrouter';\n\nimport { Box, DataTable } from 'grommet';\nimport { columns } from './data';\n\nexport const MyDataTable = (props) => {\n  const [tokenList, setTokenList] = useState([]);\n\n  const fetchData = async () => {\n    const res = await fetch(\n      `https://data-marketcap-backend.herokuapp.com/datatokens`\n    );\n    res\n      .json()\n      .then((res) => setTokenList(res))\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => fetchData(), []);\n\n  return (\n    <Box align=\"center\" pad={{ horizontal: 'none', vertical: 'small' }}>\n      <DataTable\n        columns={columns.map((c) => ({\n          ...c,\n          search: c.property === 'name' || c.property === 'symbol',\n        }))}\n        onClickRow={(e) => {\n          navigate(`/dmc/token/${e.datum.did}`);\n        }}\n        data={tokenList}\n        pad={{\n          body: 'medium',\n        }}\n        background={{\n          header: {\n            dark: 'neutral-1',\n            light: 'neutral-3',\n          },\n          body: [\n            { light: 'light-2', dark: 'dark-2' },\n            { light: 'light-3', dark: 'dark-3' },\n          ],\n          footer: {\n            dark: 'dark-3',\n            light: 'light-3',\n          },\n        }}\n        pin\n        fill\n        sortable\n        resizeable\n      />\n    </Box>\n  );\n};\n","import { Grid } from 'grommet';\n\nexport const PageWrapper = (props) => (\n  <Grid\n    fill\n    align=\"start\"\n    justifyContent=\"around\"\n    pad=\"large\"\n    gap=\"small\"\n    {...props}\n  ></Grid>\n);\n","import React from 'react';\nimport { A } from 'hookrouter';\n\nimport { Anchor, Box, Heading, Grid } from 'grommet';\nimport { MyDataTable } from '../Components/DataTable';\nimport { PageWrapper } from '../Components/PageWrapper';\n\nexport const Home = () => (\n  <PageWrapper\n    rows={['full']}\n    columns={['15%', '70%', '15%']}\n    areas={[{ name: 'middle', start: [1, 0], end: [1, 0] }]}\n  >\n    <Box gridArea=\"middle\">\n      <Heading level=\"3\">Top Data Tokens Today: </Heading>\n      <MyDataTable></MyDataTable>\n    </Box>\n  </PageWrapper>\n);\n","import React from 'react';\nimport { Rewind } from 'grommet-icons';\nimport { A } from 'hookrouter';\n\nimport { Anchor, Box, Heading, Grid, WorldMap } from 'grommet';\nimport { PageWrapper } from '../Components/PageWrapper';\n\nexport const NotFound = () => (\n  <PageWrapper\n    rows={['full']}\n    columns={['60%', '40%']}\n    areas={[\n      { name: 'left', start: [0, 0], end: [0, 0] },\n      { name: 'right', start: [1, 0], end: [1, 0] },\n    ]}\n  >\n    <WorldMap\n      gridArea=\"left\"\n      color=\"neutral-2\"\n      onSelectPlace={(lat, lon) => {}}\n      selectColor=\"accent-2\"\n      hoverColor=\"accent-4\"\n    />\n    <Box gridArea=\"right\" alignContent=\"start\">\n      <Heading level=\"1\" margin=\"xsmall\">\n        Oops. Page Not Found.\n      </Heading>\n      <Heading level=\"2\" margin={{ horizontal: 'none', vertical: 'large' }}>\n        Lost?\n      </Heading>\n      <Anchor as={A} icon={<Rewind />} label=\"Back to Home Page\" href=\"/dmc\" />\n    </Box>\n  </PageWrapper>\n);\n","import React, { useState, useEffect, useContext } from 'react';\nimport Chart from 'kaktana-react-lightweight-charts';\nimport { ThemeContext } from 'grommet';\n\nexport const DataGraph = ({ symbol, darkTheme }) => {\n  const theme = useContext(ThemeContext);\n  console.log(theme);\n  const graphOptions = {\n    lineColor: '#F03A47',\n    bottomColor: '#5E080D',\n    topColor: '#F68D94',\n    lineWidth: 3,\n    title: `${symbol}/USD`,\n  };\n\n  const options = {\n    alignLabels: true,\n    priceScale: {\n      position: 'left',\n      mode: 0,\n      autoScale: true,\n    },\n    layout: {\n      backgroundColor: theme.dark ? '#3E5C76' : '#FBC2FF',\n      textColor: theme.dark ? '#FBC2FF' : '#3E5C76',\n      fontSize: 12,\n      fontFamily: 'Calibri',\n    },\n    grid: {\n      vertLines: {\n        color: '#F03A47',\n        style: 1,\n        visible: true,\n      },\n      horzLines: {\n        color: '#F03A47',\n        style: 1,\n        visible: true,\n      },\n    },\n    localization: {\n      // timeFormatter: (businessDayOrTimestamp) => {\n      //   console.log(businessDayOrTimestamp);\n      //   if (isBusinessDay(businessDayOrTimestamp)) {\n      //     return businessDayOrTimestamp;\n      //   }\n      //   return 'Format for timestamp';\n      // },\n    },\n    timeScale: {\n      rightOffset: 8,\n      fixLeftEdge: true,\n      lockVisibleTimeRangeOnResize: true,\n      rightBarStaysOnScroll: true,\n\n      //   timeVisible: true,\n      //   secondsVisible: false,\n    },\n  };\n\n  const [areaSeries, setAreaSeries] = useState();\n\n  const handleData = (res) =>\n    res.prices.map((c) => ({ time: new Date(c[0]).toJSON(), value: c[1] }));\n\n  const fetchData = async () => {\n    // console.log('fetching new data');\n    const res = await fetch(\n      `https://api.coingecko.com/api/v3/coins/${symbol.toLowerCase()}/market_chart?vs_currency=usd&days=360&interval=daily`\n    );\n    res\n      .json()\n      .then((res) =>\n        setAreaSeries([\n          {\n            data: handleData(res),\n            options: graphOptions,\n          },\n        ])\n      )\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => fetchData(), []);\n  return (\n    <Chart\n      options={options}\n      areaSeries={areaSeries}\n      autoWidth\n      darkTheme={darkTheme}\n    />\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Box, Text, Heading, Paragraph } from 'grommet';\nimport { DataGraph } from '../Components/DataGraph';\nimport { PageWrapper } from '../Components/PageWrapper';\n\nexport const getRandomColor = () => {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n\nconst convertCase = (str) => {\n  str = str.replace(/([A-Z]+)/g, ' $1');\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\nexport const Token = ({ did, ...props }) => {\n  const [tokenDetails, setTokenDetails] = useState({\n    symbol: 'LOAD',\n    name: 'loading',\n    price: 0,\n    description: 'Please wait while the description is being loaded !',\n    priceOcean: 0,\n    otherDetails: [{ color: 'white', dataKey: 'state', dataValue: 'loading' }],\n  });\n\n  const [hasError, setErrors] = useState(false);\n\n  const handleData = (res) => {\n    let { name, symbol, price, description, priceOcean, ...otherDetails } = res;\n\n    otherDetails = Object.entries(otherDetails).map(\n      ([dataKey, dataValue], index, arr) => {\n        return {\n          color: getRandomColor(),\n          dataKey,\n          dataValue,\n        };\n      }\n    );\n\n    setTokenDetails({\n      name,\n      symbol,\n      price,\n      description,\n      priceOcean,\n      otherDetails,\n    });\n  };\n\n  const fetchData = async () => {\n    const res = await fetch(\n      `https://data-marketcap-backend.herokuapp.com/datatoken/${did}`\n    );\n    res\n      .json()\n      .then((res) => handleData(res))\n      .catch((err) => setErrors(err));\n  };\n\n  useEffect(() => fetchData(), []);\n\n  return (\n    <PageWrapper\n      rows={['10%', '90%']}\n      columns={['70%', '30%']}\n      areas={[\n        { name: 'top', start: [0, 0], end: [1, 0] },\n        { name: 'left', start: [0, 1], end: [0, 1] },\n        { name: 'right', start: [1, 1], end: [1, 1] },\n      ]}\n    >\n      <Box gridArea=\"top\" direction=\"row\">\n        <Box pad=\"medium\" fill>\n          <Text size=\"large\"> Name: {tokenDetails.name}</Text>\n        </Box>\n        <Box pad=\"medium\" fill>\n          <Text size=\"large\"> Symbol: {tokenDetails.symbol}</Text>\n        </Box>\n        <Box pad=\"medium\" fill>\n          <Text size=\"large\">Price: {tokenDetails.price} USD</Text>\n        </Box>\n        <Box pad=\"medium\" fill>\n          <Text size=\"large\"> Price: {tokenDetails.priceOcean} Ocean</Text>\n        </Box>\n      </Box>\n      <Box gridArea=\"left\" fill>\n        <DataGraph symbol=\"bitcoin\" />\n        <Box pad=\"medium\" fill>\n          <Heading pad=\"small\" margin=\"none\" level=\"4\">\n            Description\n          </Heading>\n          <Paragraph fill>{tokenDetails.description}</Paragraph>\n        </Box>\n      </Box>\n      <Box gridArea=\"right\">\n        {tokenDetails.otherDetails.map((property) => (\n          <Box pad=\"small\" border=\"small\" key={property.dataKey} fill>\n            <Heading margin=\"none\" pad=\"small\" level=\"4\">\n              {convertCase(property.dataKey)}\n            </Heading>\n            <Text size=\"medium\">{property.dataValue}</Text>\n          </Box>\n        ))}\n      </Box>\n    </PageWrapper>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { useRoutes } from 'hookrouter';\n\nimport { Grommet } from 'grommet';\nimport { grommet } from 'grommet/themes';\nimport { deepMerge } from 'grommet/utils';\n\nimport { Navbar } from './Components/Navbar';\nimport { Home } from './Pages/Home';\nimport { NotFound } from './Pages/NotFound';\nimport { Token } from './Pages/Token';\n\nconst routes = {\n  '/': () => <Home />,\n  '/dmc': () => <Home />,\n  '/dmc/': () => <Home />,\n  '/dmc/token/:did': ({ did }) => <Token did={did} />,\n  '/dmc/token/:did/': ({ did }) => <Token did={did} />,\n  '/token/:did/': ({ did }) => <Token did={did} />,\n  '/token/:did': ({ did }) => <Token did={did} />,\n};\n\nconst myTheme = deepMerge(grommet, {\n  global: {\n    focus: { border: { color: 'none' } },\n    colors: {\n      border: { light: '#601700', dark: '#F03A47' },\n      focus: 'none',\n      background: { light: '#fde2ff', dark: '#0D1321' },\n      text: { light: '#601700', dark: '#F03A47' },\n    },\n  },\n});\n\nconst App = () => {\n  const match = useRoutes(routes);\n  const [dark, setDark] = useState(false);\n\n  return (\n    <Grommet theme={myTheme} cssVars full themeMode={dark ? 'dark' : 'light'}>\n      <Navbar dark={dark} setDark={setDark} />\n      {match || <NotFound />}\n      {/* <pre>\n        <code>{JSON.stringify(myTheme, null, 2)}</code>\n      </pre> */}\n    </Grommet>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}