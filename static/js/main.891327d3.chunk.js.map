{"version":3,"sources":["Components/Container.jsx","Components/DataTableColumns.jsx","Components/Navbar.jsx","Components/DataTable.jsx","Pages/Home.jsx","Components/PageWrapper.jsx","Pages/NotFound.jsx","Components/DataGraph.jsx","Pages/Token.jsx","App.js","reportWebVitals.js","index.js"],"names":["Container","children","rest","Box","ResponsiveContext","Consumer","size","width","alignSelf","margin","horizontal","amountFormatterUSD","Intl","NumberFormat","style","currency","minimumFractionDigits","amountFormatterTkn","prop","symbol","format","wrapTextComponent","child","Text","dataTableColumns","property","header","weight","color","primary","render","name","gap","datum","price","align","marketCap","volume","Math","round","circulatingSupply","Logo","onClick","navigate","PoweredBy","direction","height","viewBox","className","d","fill","fillRule","Stat","value","Navbar","dark","setDark","_stats","useContext","TokenContext","stats","totalTokens","oceanPrice","totalMarketCap","totalMarketCapInOcean","tag","pad","vertical","border","side","map","stat","justify","Search","onSearch","useState","search","setSearch","TextInput","placeholder","padding","paddingLeft","icon","onChange","e","target","DataTableHeader","pageNumber","reachedEnd","onPageChange","Avatar","background","DataTable","allTokenList","tokenList","setTokenList","slice","pagedTokenList","setPagedTokenList","setPageNumber","length","setReachedEnd","useEffect","window","Fuse","newPageNumber","start","end","filteredTokenList","includeScore","shouldSort","distance","keys","_","item","pin","sortable","columns","data","onClickRow","did","body","footer","sort","external","onSort","_tokenList","orderBy","PercentChange","postfix","opacity","abs","defaultProps","Home","bottom","top","PageWrapper","props","Grid","justifyContent","NotFound","rows","areas","WorldMap","gridArea","onSelectPlace","lat","lon","selectColor","hoverColor","alignContent","Heading","level","Anchor","as","A","Rewind","label","href","DataGraph","darkTheme","theme","ThemeContext","options","alignLabels","priceScale","position","mode","autoScale","layout","backgroundColor","textColor","fontSize","fontFamily","grid","vertLines","visible","horzLines","localization","timeScale","rightOffset","fixLeftEdge","lockVisibleTimeRangeOnResize","rightBarStaysOnScroll","areaSeries","setAreaSeries","handleData","res","prices","c","time","Date","toJSON","a","graphOptions","lineColor","bottomColor","topColor","lineWidth","title","fetch","toLowerCase","json","then","catch","err","console","log","fetchData","autoWidth","getRandomColor","i","floor","random","Token","description","priceOcean","otherDetails","dataKey","dataValue","tokenDetails","setTokenDetails","hasError","setErrors","Object","entries","index","arr","Paragraph","str","replace","charAt","toUpperCase","routes","createContext","App","setAllTokenList","setStats","match","useRoutes","sumBy","Grommet","grommet","cssVars","full","themeMode","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.891327d3.chunk.js","sourcesContent":["import React from 'react';\nimport { Box, ResponsiveContext } from 'grommet';\n\nconst Container = ({ children, ...rest }) => {\n  return (\n    <Box {...rest}>\n      <ResponsiveContext.Consumer>\n        {(size) =>\n          size === 'large' ? (\n            <Box width=\"1200px\" alignSelf=\"center\">\n              {children}\n            </Box>\n          ) : (\n            <Box margin={{ horizontal: 'xlarge' }}>{children}</Box>\n          )\n        }\n      </ResponsiveContext.Consumer>\n    </Box>\n  );\n};\n\nexport default Container;\n","import { Box, Text } from 'grommet';\n\nexport const amountFormatterUSD = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  minimumFractionDigits: 2,\n});\n\nexport const amountFormatterTkn = (prop, symbol) => {\n  const formatter = new Intl.NumberFormat('en-US', {});\n  return formatter.format(prop) + ' ' + symbol;\n};\n\nconst wrapTextComponent = (child, rest) => (\n  <Text size=\"small\" {...rest}>\n    {child}\n  </Text>\n);\n\nexport const dataTableColumns = [\n  {\n    property: 'symbol',\n    header: wrapTextComponent('Name', { weight: 'bold', color: 'dark-6' }),\n    primary: true,\n    render: ({ name, symbol }) => (\n      <Box gap=\"xxsmall\">\n        <Text size=\"small\" weight=\"bold\">\n          {name}\n        </Text>\n        <Text size=\"xsmall\" color=\"dark-6\" weight={500}>\n          {symbol}\n        </Text>\n      </Box>\n    ),\n  },\n  {\n    property: 'price',\n    header: wrapTextComponent('Price', { weight: 'bold', color: 'dark-6' }),\n    render: (datum) =>\n      wrapTextComponent(amountFormatterUSD.format(datum.price)),\n    align: 'end',\n  },\n  {\n    property: 'marketCap',\n    header: wrapTextComponent('Market Cap', {\n      weight: 'bold',\n      color: 'dark-6',\n    }),\n    render: (datum) =>\n      wrapTextComponent(amountFormatterUSD.format(datum.marketCap)),\n    align: 'end',\n  },\n  {\n    property: 'volume',\n    header: wrapTextComponent('Volume (Token)', {\n      weight: 'bold',\n      color: 'dark-6',\n    }),\n    align: 'end',\n    render: ({ volume, price, symbol }) => (\n      <Box gap=\"xxsmall\">\n        <Text size=\"small\" weight=\"bold\">\n          {amountFormatterUSD.format(volume)}\n        </Text>\n        <Text size=\"xsmall\" color=\"dark-6\" weight={500}>\n          {amountFormatterTkn(price !== 0 ? volume / price : 0, symbol)}\n        </Text>\n      </Box>\n    ),\n  },\n  {\n    property: 'circulatingSupply',\n    header: wrapTextComponent('Circulating Supply', {\n      weight: 'bold',\n      color: 'dark-6',\n    }),\n    align: 'end',\n    render: (datum) =>\n      wrapTextComponent(Math.round(datum.circulatingSupply * 100) / 100),\n  },\n];\n","import React, { useContext } from 'react';\nimport { Box, Text } from 'grommet';\nimport { navigate } from 'hookrouter';\nimport Container from './Container';\nimport { TokenContext } from '../App';\nimport { amountFormatterTkn, amountFormatterUSD } from './DataTableColumns';\n\nconst Logo = () => (\n  <Box onClick={() => navigate(`/dmc`)}>\n    <Text size=\"large\" weight={500}>\n      Data Market Cap\n    </Text>\n  </Box>\n);\n\nconst PoweredBy = () => (\n  <Box direction=\"row\" gap=\"small\" align=\"center\">\n    <Text size=\"xsmall\">powered by</Text>\n    <svg\n      width=\"36\"\n      height=\"36\"\n      viewBox=\"0 0 512 512\"\n      className=\"Logo-module--logo--fjl9p undefined\"\n    >\n      <path\n        d=\"M133.619 477.44v-.264c0-16.034-12.033-28.807-27.468-28.807-15.83 0-27.218 12.908-27.218 28.557v.25c0 16.044 12.039 28.817 27.469 28.817 15.835 0 27.217-12.903 27.217-28.552m-61.619 0v-.265c0-18.636 14.523-34.8 34.402-34.8 19.767 0 34.15 15.905 34.15 34.55v.25c0 18.646-14.523 34.824-34.401 34.824C86.393 512 72 496.086 72 477.44m83.548 0v-.264c0-18.636 14.874-34.8 33.92-34.8 12.52 0 20.35 5.728 26.615 12.255l-4.567 4.679c-5.74-5.853-12.27-10.941-22.183-10.941-15.129 0-26.87 12.643-26.87 28.557v.25c0 16.044 12.13 28.817 27.395 28.817 9.388 0 16.692-4.814 22.308-11.08l4.437 3.914c-6.785 7.686-14.88 13.173-27.135 13.173-19.18 0-33.92-15.914-33.92-34.56m128.046-3.39c-.915-13.422-8.611-25.816-23.88-25.816-13.188 0-23.358 11.08-24.537 25.816h48.417zm-55.21 3.27v-.274c0-19.294 13.584-34.67 31.586-34.67 18.666 0 30.54 15.12 30.54 34.8 0 1.179 0 1.573-.13 2.612h-55.203c1.179 16.563 13.044 26.21 26.107 26.21 10.296 0 17.352-4.56 22.825-10.426l4.438 3.914c-6.787 7.3-14.739 12.514-27.528 12.514-17.487 0-32.634-13.956-32.634-34.68zm126.634 8.016v-7.632c-5.649-1.439-13.135-3.009-22.731-3.009-14.202 0-22.091 6.3-22.091 15.627v.261c0 9.72 9.198 15.37 19.463 15.37 13.669 0 25.359-8.402 25.359-20.617m-51.654 5.635v-.257c0-13.93 11.957-21.809 29.32-21.809 9.325 0 15.769 1.187 22.213 2.902v-2.902c0-13.538-8.292-20.491-22.086-20.491-8.16 0-14.857 2.238-21.034 5.393l-2.371-5.66c7.365-3.406 14.6-5.77 23.802-5.77 9.063 0 16.292 2.49 21.16 7.355 4.47 4.467 6.837 10.64 6.837 18.916v41.772h-6.308v-11.168C350.295 505.686 342.009 512 329.26 512c-12.49 0-25.897-7.094-25.897-21.029m80.335-47.025h6.377v12.475c4.403-7.887 11.81-14.044 23.893-14.044 16.75 0 26.5 11.554 26.5 27.58v40.972h-6.363v-39.79c0-13.792-7.666-22.862-21.043-22.862-12.993 0-22.987 9.99-22.987 23.904v38.748h-6.377v-66.983zM119.129 179.41c0 10.944-8.864 19.821-19.815 19.821-10.942 0-19.816-8.877-19.816-19.82 0-10.944 8.874-19.812 19.816-19.812 10.95 0 19.816 8.868 19.816 19.811m314.912 0c0 10.944-8.875 19.821-19.811 19.821-10.946 0-19.821-8.877-19.821-19.82 0-10.944 8.875-19.812 19.82-19.812 10.937 0 19.812 8.868 19.812 19.811m-157.456 78.195c0 10.942-8.874 19.819-19.814 19.819-10.945 0-19.818-8.877-19.818-19.819 0-10.942 8.873-19.813 19.818-19.813 10.94 0 19.814 8.871 19.814 19.813m-79.264-38.558c0 10.939-8.869 19.816-19.818 19.816-10.945 0-19.814-8.877-19.814-19.816 0-10.948 8.87-19.816 19.814-19.816 10.95 0 19.818 8.868 19.818 19.816m157.456 0c0 10.939-8.873 19.816-19.813 19.816-10.95 0-19.819-8.877-19.819-19.816 0-10.948 8.87-19.816 19.819-19.816 10.94 0 19.813 8.868 19.813 19.816m-242.075 20.356c0 7.382-5.99 13.385-13.382 13.385-7.402 0-13.396-6.003-13.396-13.385 0-7.4 5.994-13.394 13.396-13.394 7.393 0 13.382 5.993 13.382 13.394m314.912 0c0 7.382-5.998 13.385-13.39 13.385-7.395 0-13.388-6.003-13.388-13.385 0-7.4 5.993-13.394 13.389-13.394 7.391 0 13.39 5.993 13.39 13.394m-157.457 79.25c0 7.396-6 13.398-13.384 13.398-7.389 0-13.394-6.002-13.394-13.399 0-7.39 6.005-13.379 13.394-13.379 7.383 0 13.384 5.988 13.384 13.38m-79.264-39.618c0 7.394-5.993 13.384-13.384 13.384-7.396 0-13.394-5.99-13.394-13.384 0-7.399 5.998-13.394 13.394-13.394 7.391 0 13.384 5.995 13.384 13.394m157.456 0c0 7.394-6.001 13.384-13.381 13.384-7.4 0-13.397-5.99-13.397-13.384 0-7.399 5.997-13.394 13.397-13.394 7.38 0 13.381 5.995 13.381 13.394m-242.075 7.486a6.962 6.962 0 11-13.925 0 6.957 6.957 0 016.965-6.955 6.956 6.956 0 016.96 6.955m314.912 0a6.962 6.962 0 11-13.925 0 6.955 6.955 0 016.965-6.955c3.838 0 6.96 3.112 6.96 6.955m-157.456 79.266c0 3.846-3.122 6.967-6.96 6.967a6.967 6.967 0 01-6.964-6.967 6.958 6.958 0 016.964-6.958 6.96 6.96 0 016.96 6.958m-79.263-39.627a6.967 6.967 0 01-6.965 6.962 6.966 6.966 0 01-6.96-6.962 6.96 6.96 0 016.96-6.962 6.961 6.961 0 016.965 6.962m157.456 0c0 3.841-3.123 6.962-6.96 6.962A6.96 6.96 0 01328 326.16a6.953 6.953 0 016.965-6.962 6.961 6.961 0 016.96 6.962m-58.912-299.38c0 14.792-11.991 26.777-26.771 26.777-14.795 0-26.786-11.985-26.786-26.777C229.456 11.99 241.447 0 256.242 0c14.78 0 26.77 11.99 26.77 26.779m0 79.263c0 14.79-11.99 26.778-26.77 26.778-14.795 0-26.786-11.988-26.786-26.778 0-14.786 11.991-26.778 26.786-26.778 14.78 0 26.77 11.992 26.77 26.778m0 78.197c0 14.784-11.99 26.774-26.77 26.774-14.795 0-26.786-11.99-26.786-26.774 0-14.793 11.991-26.783 26.786-26.783 14.78 0 26.77 11.99 26.77 26.783m157.457-78.197c0 14.79-11.99 26.778-26.776 26.778-14.792 0-26.78-11.988-26.78-26.778 0-14.786 11.988-26.778 26.78-26.778 14.787 0 26.776 11.992 26.776 26.778m-314.913 0c0 14.79-11.986 26.778-26.775 26.778C83.99 132.82 72 120.832 72 106.042c0-14.786 11.991-26.778 26.78-26.778 14.79 0 26.776 11.992 26.776 26.778M204.82 66.41c0 14.788-11.987 26.778-26.778 26.778-14.791 0-26.778-11.99-26.778-26.778 0-14.798 11.987-26.778 26.778-26.778 14.79 0 26.778 11.98 26.778 26.778m0 78.19c0 14.79-11.987 26.78-26.778 26.78-14.791 0-26.778-11.99-26.778-26.78 0-14.785 11.987-26.776 26.778-26.776 14.79 0 26.778 11.991 26.778 26.776m157.456-78.19c0 14.788-11.99 26.778-26.78 26.778-14.79 0-26.776-11.99-26.776-26.778 0-14.798 11.986-26.778 26.776-26.778s26.78 11.98 26.78 26.778m0 78.19c0 14.79-11.99 26.78-26.78 26.78-14.79 0-26.776-11.99-26.776-26.78 0-14.785 11.986-26.776 26.776-26.776s26.78 11.991 26.78 26.776\"\n        fill=\"#141414\"\n        fillRule=\"evenodd\"\n      />\n    </svg>\n  </Box>\n);\n\nconst Stat = ({ name, value }) => (\n  <Box direction=\"row\" gap=\"xxsmall\">\n    <Text size=\"xsmall\">{name}:</Text>\n    <Text size=\"xsmall\" color=\"brand\" weight={500}>\n      {value}\n    </Text>\n  </Box>\n);\n\nexport const Navbar = ({ dark, setDark }) => {\n  const { stats: _stats } = useContext(TokenContext);\n  const stats = [\n    { name: 'Tokens', value: _stats.totalTokens },\n    {\n      name: 'OCEAN Price',\n      value: amountFormatterUSD.format(_stats.oceanPrice),\n    },\n    {\n      name: 'Market Cap',\n      value: `${amountFormatterUSD.format(\n        _stats.totalMarketCap\n      )} (${amountFormatterTkn(_stats.totalMarketCapInOcean, 'OCEAN')})`,\n    },\n  ];\n\n  return (\n    <>\n      <Box\n        tag=\"header\"\n        pad={{ vertical: 'xsmall' }}\n        border={{ side: 'bottom', size: 'xsmall', color: 'light-3' }}\n      >\n        <Container>\n          <Box direction=\"row\" align=\"center\">\n            <Box direction=\"row\" gap=\"small\">\n              {stats.map((stat) => (\n                <Stat key={stat.name} name={stat.name} value={stat.value} />\n              ))}\n            </Box>\n          </Box>\n        </Container>\n      </Box>\n      <Box\n        tag=\"header\"\n        pad={{ vertical: 'small' }}\n        border={{ side: 'bottom', size: 'xsmall', color: 'light-3' }}\n      >\n        <Container>\n          <Box direction=\"row\" align=\"center\" justify=\"between\">\n            <Logo />\n            <PoweredBy />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n","import React, { useState, useContext, useEffect } from 'react';\nimport { navigate } from 'hookrouter';\nimport _ from 'lodash';\nimport * as Icons from 'grommet-icons';\nimport {\n  Avatar,\n  Box,\n  DataTable as GrommetDataTable,\n  Text,\n  TextInput,\n} from 'grommet';\nimport { dataTableColumns } from './DataTableColumns';\nimport { TokenContext } from '../App';\nimport Fuse from 'fuse.js';\n\nconst Search = ({ onSearch }) => {\n  const [search, setSearch] = useState('');\n\n  return (\n    <TextInput\n      placeholder=\"Search for tokens\"\n      size=\"small\"\n      style={{ padding: '5px', paddingLeft: '30px' }}\n      icon={<Icons.Search size=\"small\" />}\n      value={search}\n      onChange={(e) => {\n        setSearch(e.target.value);\n        onSearch(e.target.value);\n      }}\n    />\n  );\n};\n\nconst DataTableHeader = ({\n  pageNumber,\n  reachedEnd,\n  onPageChange,\n  onSearch,\n}) => {\n  return (\n    <Box direction=\"row\" justify=\"end\" align=\"center\" gap=\"medium\">\n      <Box direction=\"row\" gap=\"small\" align=\"center\">\n        <Avatar\n          onClick={pageNumber !== 1 ? () => onPageChange(pageNumber - 1) : null}\n          background={pageNumber !== 1 ? 'light-6' : 'light-2'}\n          size=\"small\"\n        >\n          <Icons.FormPrevious size=\"small\" />\n        </Avatar>\n        <Text size=\"xsmall\">Page {pageNumber}</Text>\n        <Avatar\n          onClick={!reachedEnd ? () => onPageChange(pageNumber + 1) : null}\n          background={!reachedEnd ? 'light-6' : 'light-2'}\n          size=\"small\"\n        >\n          <Icons.FormNext size=\"small\" />\n        </Avatar>\n      </Box>\n      <Box justify=\"center\">\n        <Search onSearch={onSearch} />\n      </Box>\n    </Box>\n  );\n};\n\nconst DataTable = () => {\n  const { allTokenList } = useContext(TokenContext);\n  const [tokenList, setTokenList] = useState(allTokenList);\n  const [pagedTokenList, setPagedTokenList] = useState(tokenList.slice(0, 20));\n  const [pageNumber, setPageNumber] = useState(1);\n  const [reachedEnd, setReachedEnd] = useState(tokenList.length <= 20);\n\n  useEffect(() => {\n    window.Fuse = Fuse;\n  }, []);\n\n  const handlePageChange = (newPageNumber) => {\n    let start = 20 * (newPageNumber - 1);\n    let end = 20 * newPageNumber;\n    let reachedEnd = false;\n\n    if (start < tokenList.length) {\n      if (end > tokenList.length) {\n        end = tokenList.length;\n        reachedEnd = true;\n      }\n\n      setPagedTokenList(tokenList.slice(start, end));\n      setPageNumber(newPageNumber);\n      setReachedEnd(reachedEnd);\n    }\n  };\n\n  const sortList = ({ property, direction }) => {\n    const _tokenList = _(tokenList).orderBy(property, direction).value();\n    setTokenList(_tokenList);\n    setPagedTokenList(_tokenList.slice(0, 20));\n    setPageNumber(1);\n  };\n\n  const handleSearch = (search) => {\n    let filteredTokenList = allTokenList;\n\n    if (search !== '') {\n      const options = {\n        includeScore: true,\n        shouldSort: true,\n        distance: 100000,\n        keys: ['did', 'name', 'symbol', 'tags'],\n      };\n      filteredTokenList = new Fuse(allTokenList, options)\n        .search(search)\n        .map((_) => _.item);\n    }\n\n    setTokenList(filteredTokenList);\n    setPageNumber(1);\n    setPagedTokenList(filteredTokenList.slice(0, 20));\n    setReachedEnd(filteredTokenList.length <= 20);\n  };\n\n  return (\n    <Box gap=\"small\">\n      <DataTableHeader\n        pageNumber={pageNumber}\n        reachedEnd={reachedEnd}\n        onPageChange={handlePageChange}\n        onSearch={handleSearch}\n      />\n      <Box align=\"center\">\n        <GrommetDataTable\n          pin\n          fill\n          sortable\n          columns={dataTableColumns}\n          data={pagedTokenList}\n          border={{ color: 'light-3', side: 'horizontal', size: 'xsmall' }}\n          onClickRow={({ datum }) => navigate(`/dmc/token/${datum.did}`)}\n          background={{\n            header: 'white',\n            body: 'light-1',\n            footer: 'light-1',\n          }}\n          pad={{ vertical: 'small', horizontal: 'medium' }}\n          sort={{ external: true }}\n          onSort={sortList}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default DataTable;\n","import React, { useContext } from 'react';\nimport Container from '../Components/Container';\nimport { Box, Text } from 'grommet';\nimport * as Icons from 'grommet-icons'; // TODO: only import necessary icons\nimport { TokenContext } from '../App';\nimport { amountFormatterUSD } from '../Components/DataTableColumns';\n\nimport DataTable from '../Components/DataTable';\n\nconst PercentChange = ({ value, postfix }) => (\n  <Box\n    direction=\"row\"\n    gap=\"xxsmall\"\n    align=\"center\"\n    round=\"xsmall\"\n    background={{\n      color: value < 0 ? 'status-critical' : 'status-ok',\n      opacity: 'strong',\n    }}\n    pad={{ horizontal: 'xsmall' }}\n  >\n    {value < 0 ? (\n      <Icons.Down color=\"white\" size=\"small\" />\n    ) : (\n      <Icons.Up color=\"white\" size=\"small\" />\n    )}\n\n    <Text size=\"small\" weight=\"bold\" color=\"white\">\n      {Math.abs(value)}\n      {postfix}\n    </Text>\n  </Box>\n);\n\nPercentChange.defaultProps = {\n  postfix: '',\n};\n\nconst Home = () => {\n  const { stats } = useContext(TokenContext);\n\n  return (\n    <Container margin={{ vertical: 'large' }}>\n      <Text size=\"large\" margin={{ vertical: 'small' }} weight=\"bold\">\n        Today's Token Prices by Market Cap\n      </Text>\n      <Box direction=\"row\" gap=\"xxsmall\">\n        <Text size=\"small\">\n          The global OCEAN market cap is{' '}\n          <strong>{amountFormatterUSD.format(stats.totalMarketCap)}</strong>, a\n        </Text>\n        <PercentChange value={9.8} postfix=\"%\" />\n        <Text size=\"small\">change over the last day.</Text>\n      </Box>\n      <Box margin={{ bottom: 'large', top: 'medium' }}>\n        <DataTable />\n      </Box>\n    </Container>\n  );\n};\n\nexport default Home;\n","import { Grid } from 'grommet';\n\nexport const PageWrapper = (props) => (\n  <Grid\n    fill\n    align=\"start\"\n    justifyContent=\"around\"\n    pad=\"large\"\n    gap=\"small\"\n    {...props}\n  ></Grid>\n);\n","import React from 'react';\nimport { Rewind } from 'grommet-icons';\nimport { A } from 'hookrouter';\n\nimport { Anchor, Box, Heading, WorldMap } from 'grommet';\nimport { PageWrapper } from '../Components/PageWrapper';\n\nexport const NotFound = () => (\n  <PageWrapper\n    rows={['full']}\n    columns={['60%', '40%']}\n    areas={[\n      { name: 'left', start: [0, 0], end: [0, 0] },\n      { name: 'right', start: [1, 0], end: [1, 0] },\n    ]}\n  >\n    <WorldMap\n      gridArea=\"left\"\n      color=\"neutral-2\"\n      onSelectPlace={(lat, lon) => {}}\n      selectColor=\"accent-2\"\n      hoverColor=\"accent-4\"\n    />\n    <Box gridArea=\"right\" alignContent=\"start\">\n      <Heading level=\"1\" margin=\"xsmall\">\n        Oops. Page Not Found.\n      </Heading>\n      <Heading level=\"2\" margin={{ horizontal: 'none', vertical: 'large' }}>\n        Lost?\n      </Heading>\n      <Anchor\n        as={A}\n        icon={<Rewind />}\n        label=\"Back to HomeOld Page\"\n        href=\"/dmc\"\n      />\n    </Box>\n  </PageWrapper>\n);\n","import React, { useState, useEffect, useContext } from 'react';\nimport Chart from 'kaktana-react-lightweight-charts';\nimport { ThemeContext } from 'grommet';\n\nexport const DataGraph = ({ symbol, darkTheme }) => {\n  const theme = useContext(ThemeContext);\n\n  const options = {\n    alignLabels: true,\n    priceScale: {\n      position: 'left',\n      mode: 0,\n      autoScale: true,\n    },\n    layout: {\n      backgroundColor: theme.dark ? '#3E5C76' : '#FBC2FF',\n      textColor: theme.dark ? '#FBC2FF' : '#3E5C76',\n      fontSize: 12,\n      fontFamily: 'Calibri',\n    },\n    grid: {\n      vertLines: {\n        color: '#F03A47',\n        style: 1,\n        visible: true,\n      },\n      horzLines: {\n        color: '#F03A47',\n        style: 1,\n        visible: true,\n      },\n    },\n    localization: {\n      // timeFormatter: (businessDayOrTimestamp) => {\n      //   console.log(businessDayOrTimestamp);\n      //   if (isBusinessDay(businessDayOrTimestamp)) {\n      //     return businessDayOrTimestamp;\n      //   }\n      //   return 'Format for timestamp';\n      // },\n    },\n    timeScale: {\n      rightOffset: 8,\n      fixLeftEdge: true,\n      lockVisibleTimeRangeOnResize: true,\n      rightBarStaysOnScroll: true,\n\n      //   timeVisible: true,\n      //   secondsVisible: false,\n    },\n  };\n\n  const [areaSeries, setAreaSeries] = useState();\n\n  const handleData = (res) =>\n    res.prices.map((c) => ({ time: new Date(c[0]).toJSON(), value: c[1] }));\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // console.log('fetching new data');\n\n      const graphOptions = {\n        lineColor: '#F03A47',\n        bottomColor: '#5E080D',\n        topColor: '#F68D94',\n        lineWidth: 3,\n        title: `${symbol}/USD`,\n      };\n\n      const res = await fetch(\n        `https://api.coingecko.com/api/v3/coins/${symbol.toLowerCase()}/market_chart?vs_currency=usd&days=360&interval=daily`\n      );\n      res\n        .json()\n        .then((res) =>\n          setAreaSeries([\n            {\n              data: handleData(res),\n              options: graphOptions,\n            },\n          ])\n        )\n        .catch((err) => console.log(err));\n    };\n    fetchData();\n  }, [symbol]);\n\n  return (\n    <Chart\n      options={options}\n      areaSeries={areaSeries}\n      autoWidth\n      darkTheme={darkTheme}\n    />\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Box, Text, Heading, Paragraph } from 'grommet';\nimport { DataGraph } from '../Components/DataGraph';\nimport { PageWrapper } from '../Components/PageWrapper';\n\nexport const getRandomColor = () => {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n\nconst convertCase = (str) => {\n  str = str.replace(/([A-Z]+)/g, ' $1');\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\nexport const Token = ({ did, ...props }) => {\n  const [tokenDetails, setTokenDetails] = useState({\n    symbol: 'LOAD',\n    name: 'loading',\n    price: 0,\n    description: 'Please wait while the description is being loaded !',\n    priceOcean: 0,\n    otherDetails: [{ color: 'white', dataKey: 'state', dataValue: 'loading' }],\n  });\n\n  const [hasError, setErrors] = useState(false);\n\n  const handleData = (res) => {\n    let { name, symbol, price, description, priceOcean, ...otherDetails } = res;\n\n    otherDetails = Object.entries(otherDetails).map(\n      ([dataKey, dataValue], index, arr) => {\n        return {\n          color: getRandomColor(),\n          dataKey,\n          dataValue,\n        };\n      }\n    );\n\n    setTokenDetails({\n      name,\n      symbol,\n      price,\n      description,\n      priceOcean,\n      otherDetails,\n    });\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetch(\n        `https://data-marketcap-backend.herokuapp.com/datatoken/${did}`\n      );\n      res\n        .json()\n        .then((res) => handleData(res))\n        .catch((err) => setErrors(err));\n    };\n    fetchData();\n  }, [did]);\n\n  return (\n    <PageWrapper\n      rows={['10%', '90%']}\n      columns={['70%', '30%']}\n      areas={[\n        { name: 'top', start: [0, 0], end: [1, 0] },\n        { name: 'left', start: [0, 1], end: [0, 1] },\n        { name: 'right', start: [1, 1], end: [1, 1] },\n      ]}\n    >\n      {hasError && 'Has Error'}\n      <Box gridArea=\"top\" direction=\"row\">\n        <Box pad=\"medium\" fill>\n          <Text size=\"large\"> Name: {tokenDetails.name}</Text>\n        </Box>\n        <Box pad=\"medium\" fill>\n          <Text size=\"large\"> Symbol: {tokenDetails.symbol}</Text>\n        </Box>\n        <Box pad=\"medium\" fill>\n          <Text size=\"large\">Price: {tokenDetails.price} USD</Text>\n        </Box>\n        <Box pad=\"medium\" fill>\n          <Text size=\"large\"> Price: {tokenDetails.priceOcean} Ocean</Text>\n        </Box>\n      </Box>\n      <Box gridArea=\"left\" fill>\n        <DataGraph symbol=\"bitcoin\" />\n        <Box pad=\"medium\" fill>\n          <Heading pad=\"small\" margin=\"none\" level=\"4\">\n            Description\n          </Heading>\n          <Paragraph fill>{tokenDetails.description}</Paragraph>\n        </Box>\n      </Box>\n      <Box gridArea=\"right\">\n        {tokenDetails.otherDetails.map((property) => (\n          <Box pad=\"small\" border=\"small\" key={property.dataKey} fill>\n            <Heading margin=\"none\" pad=\"small\" level=\"4\">\n              {convertCase(property.dataKey)}\n            </Heading>\n            <Text size=\"medium\">{property.dataValue}</Text>\n          </Box>\n        ))}\n      </Box>\n    </PageWrapper>\n  );\n};\n","import React, { useState, useEffect, createContext } from 'react';\n\nimport { useRoutes } from 'hookrouter';\nimport _ from 'lodash';\nimport { Box, Grommet, Text } from 'grommet';\nimport { grommet } from 'grommet/themes';\n\nimport { Navbar } from './Components/Navbar';\nimport Home from './Pages/Home';\nimport { NotFound } from './Pages/NotFound';\nimport { Token } from './Pages/Token';\n\nconst routes = {\n  '/': () => <Home />,\n  '/dmc': () => <Home />,\n  '/dmc/': () => <Home />,\n  '/dmc/token/:did/': ({ did }) => <Token did={did} />,\n  '/dmc/token/:did': ({ did }) => <Token did={did} />,\n  '/token/:did/': ({ did }) => <Token did={did} />,\n  '/token/:did': ({ did }) => <Token did={did} />,\n};\n\nexport const TokenContext = createContext({});\n\nconst App = () => {\n  const [allTokenList, setAllTokenList] = useState([]);\n  const [stats, setStats] = useState({});\n  const [dark, setDark] = useState(false);\n  const match = useRoutes(routes);\n\n  const fetchData = async () => {\n    const res = await fetch(\n      `https://data-marketcap-backend.herokuapp.com/datatokens`\n    );\n    res\n      .json()\n      .then((res) => {\n        setAllTokenList(_(res).orderBy('marketCap', 'desc').value());\n\n        const totalMarketCap = _(res).sumBy((_) => _.marketCap);\n        const oceanPrice = 0.609;\n        setStats({\n          totalTokens: res.length,\n          totalMarketCap,\n          oceanPrice,\n          totalMarketCapInOcean: totalMarketCap / oceanPrice,\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  console.log(stats);\n  useEffect(() => fetchData(), []);\n\n  return (\n    <Grommet theme={grommet} cssVars full themeMode={dark ? 'dark' : 'light'}>\n      {allTokenList.length > 0 ? (\n        <TokenContext.Provider value={{ allTokenList, stats }}>\n          <Navbar dark={dark} setDark={setDark} />\n          <Box background=\"light-1\">{match || <NotFound />}</Box>\n        </TokenContext.Provider>\n      ) : (\n        <Box height=\"100vh\" align=\"center\" justify=\"center\">\n          <Text size=\"small\">Loading...</Text>\n        </Box>\n      )}\n    </Grommet>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}