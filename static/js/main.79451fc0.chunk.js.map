{"version":3,"sources":["Components/Container.jsx","Components/Tag.js","Components/DataTableColumns.jsx","Components/Navbar.jsx","Components/DataTable.jsx","Pages/Home.jsx","Components/PageWrapper.jsx","Pages/NotFound.jsx","Components/DataGraph.jsx","Pages/Token.jsx","App.js","reportWebVitals.js","index.js"],"names":["Container","children","rest","Box","ResponsiveContext","Consumer","size","width","alignSelf","margin","horizontal","renderTag","onRemove","background","direction","align","round","pad","gap","Text","color","opacity","FormClose","style","height","Tag","Button","onClick","amountFormatterUSD","Intl","NumberFormat","currency","minimumFractionDigits","amountFormatterTkn","prop","symbol","format","wrapTextComponent","child","dataTableColumns","property","header","weight","primary","render","name","datum","price","marketCap","volume","circulatingSupply","Math","tags","slice","map","x","left","length","push","Logo","navigate","PoweredBy","viewBox","className","d","fill","fillRule","Stat","value","Navbar","dark","setDark","_stats","useContext","TokenContext","stats","totalTokens","oceanPrice","oceanMarketCap","dataTokensVolumeInOcean","totalMarketCap","totalMarketCapInOcean","tag","vertical","border","side","stat","justify","Search","onSearch","useState","search","setSearch","TextInput","placeholder","padding","paddingLeft","icon","onChange","e","target","DataTableHeader","pageNumber","reachedEnd","onPageChange","Avatar","DataTable","allTokenList","low","high","tokenList","setTokenList","pagedTokenList","setPagedTokenList","setPageNumber","setReachedEnd","newPageNumber","start","end","filteredTokenList","Fuse","includeScore","shouldSort","distance","keys","_","item","pin","sortable","columns","data","onClickRow","did","body","footer","sort","external","onSort","_tokenList","orderBy","PercentChange","postfix","abs","defaultProps","Home","bottom","top","PageWrapper","props","Grid","justifyContent","NotFound","rows","areas","WorldMap","gridArea","onSelectPlace","lat","lon","selectColor","hoverColor","alignContent","Heading","level","Anchor","as","A","Rewind","label","href","DataGraph","darkTheme","theme","ThemeContext","options","alignLabels","priceScale","position","mode","autoScale","layout","backgroundColor","global","colors","textColor","fontSize","fontFamily","grid","vertLines","brand","visible","horzLines","localization","timeScale","rightOffset","fixLeftEdge","lockVisibleTimeRangeOnResize","rightBarStaysOnScroll","areaSeries","setAreaSeries","handleData","res","prices","c","time","Date","toJSON","useEffect","a","graphOptions","lineColor","bottomColor","topColor","lineWidth","title","fetch","toLowerCase","json","then","catch","err","console","log","fetchData","autoWidth","TokenDetail","truncate","Token","tokenDetails","setTokenDetails","isLoading","setIsLoading","hasError","setErrors","max","min","author","createdAt","toLocaleString","datasetName","address","Markdown","components","p","description","flex","priceOcean","Table","TableHeader","TableRow","TableCell","scope","TableBody","routes","createContext","App","setAllTokenList","setStats","match","useRoutes","dataTokensMarketCap","dataTokensVolume","Grommet","grommet","cssVars","full","themeMode","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.79451fc0.chunk.js","sourcesContent":["import React from 'react';\nimport { Box, ResponsiveContext } from 'grommet';\n\nconst Container = ({ children, ...rest }) => {\n  return (\n    <Box {...rest}>\n      <ResponsiveContext.Consumer>\n        {(size) =>\n          size === 'large' ? (\n            <Box width=\"1200px\" alignSelf=\"center\">\n              {children}\n            </Box>\n          ) : (\n            <Box margin={{ horizontal: 'xlarge' }}>{children}</Box>\n          )\n        }\n      </ResponsiveContext.Consumer>\n    </Box>\n  );\n};\n\nexport default Container;\n","import React from 'react';\n\nimport { Box, Button, Text } from 'grommet';\n\nimport { FormClose } from 'grommet-icons';\n\nconst renderTag = (children, onRemove) => (\n  <Box\n    background=\"brand\"\n    direction=\"column\"\n    align=\"center\"\n    round=\"xsmall\"\n    pad=\"xsmall\"\n    gap=\"xsmall\"\n    margin=\"xxsmall\"\n  >\n    <Text size=\"small\">{children}</Text>\n    {onRemove && (\n      <Box background={{ color: 'white', opacity: 'strong' }} round=\"full\">\n        <FormClose color=\"brand\" style={{ width: '12px', height: '12px' }} />\n      </Box>\n    )}\n  </Box>\n);\n\nexport const Tag = ({ children, onRemove, ...rest }) =>\n  onRemove ? (\n    <Button onClick={onRemove}>{renderTag(children, onRemove)}</Button>\n  ) : (\n    renderTag(children, onRemove)\n  );\n","import { Box, Text } from 'grommet';\nimport { Tag } from './Tag';\n\nexport const amountFormatterUSD = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  minimumFractionDigits: 2,\n});\n\nexport const amountFormatterTkn = (prop, symbol) => {\n  const formatter = new Intl.NumberFormat('en-US', {});\n  return formatter.format(prop) + ' ' + symbol;\n};\n\nconst wrapTextComponent = (child, rest) => (\n  <Text size=\"small\" {...rest}>\n    {child}\n  </Text>\n);\n\nexport const dataTableColumns = [\n  {\n    property: 'symbol',\n    header: wrapTextComponent('Name', { weight: 'bold', color: 'dark-6' }),\n    primary: true,\n    render: ({ name, symbol }) => (\n      <Box gap=\"xxsmall\">\n        <Text size=\"small\" weight=\"bold\">\n          {name}\n        </Text>\n        <Text size=\"xsmall\" color=\"dark-6\" weight={500}>\n          {symbol}\n        </Text>\n      </Box>\n    ),\n  },\n  {\n    property: 'price',\n    header: wrapTextComponent('Price', { weight: 'bold', color: 'dark-6' }),\n    render: (datum) =>\n      wrapTextComponent(amountFormatterUSD.format(datum.price)),\n    align: 'end',\n  },\n  {\n    property: 'marketCap',\n    header: wrapTextComponent('Market Cap', {\n      weight: 'bold',\n      color: 'dark-6',\n    }),\n    render: (datum) =>\n      wrapTextComponent(amountFormatterUSD.format(datum.marketCap)),\n    align: 'end',\n  },\n  {\n    property: 'volume',\n    header: wrapTextComponent('Volume (Token)', {\n      weight: 'bold',\n      color: 'dark-6',\n    }),\n    align: 'end',\n    render: ({ volume, price, symbol, circulatingSupply }) => (\n      <Box gap=\"xxsmall\">\n        <Text size=\"small\" weight=\"bold\">\n          {amountFormatterUSD.format(volume)}\n        </Text>\n        <Text size=\"xsmall\" color=\"dark-6\" weight={500}>\n          {amountFormatterTkn(circulatingSupply, symbol)}\n        </Text>\n      </Box>\n    ),\n  },\n  {\n    property: 'circulatingSupply',\n    header: wrapTextComponent('Circulating Supply', {\n      weight: 'bold',\n      color: 'dark-6',\n    }),\n    align: 'end',\n    render: (datum) =>\n      wrapTextComponent(Math.round(datum.circulatingSupply * 100) / 100),\n  },\n  {\n    property: 'Tags',\n    header: wrapTextComponent('Tags', {\n      weight: 'bold',\n      color: 'dark-6',\n    }),\n    align: 'end',\n    render: (datum) => {\n      const tags = datum.tags\n        .slice(0, 2)\n        .map((x) => <Tag key={x} children={x} />);\n      const left = datum.tags.length - 2;\n      if (left > 0) {\n        tags.push(<Tag key={left} children={`and ${left} others`} />);\n      }\n      return tags;\n    },\n  },\n];\n","import React, { useContext } from 'react';\nimport { Box, Text } from 'grommet';\nimport { navigate } from 'hookrouter';\nimport Container from './Container';\nimport { TokenContext } from '../App';\nimport { amountFormatterTkn, amountFormatterUSD } from './DataTableColumns';\n\nconst Logo = () => (\n  <Box onClick={() => navigate(`/dmc`)}>\n    <Text size=\"large\" weight={500}>\n      Data Market Cap\n    </Text>\n  </Box>\n);\n\nconst PoweredBy = () => (\n  <Box direction=\"row\" gap=\"small\" align=\"center\">\n    <Text size=\"xsmall\">powered by</Text>\n    <svg\n      width=\"36\"\n      height=\"36\"\n      viewBox=\"0 0 512 512\"\n      className=\"Logo-module--logo--fjl9p undefined\"\n    >\n      <path\n        d=\"M133.619 477.44v-.264c0-16.034-12.033-28.807-27.468-28.807-15.83 0-27.218 12.908-27.218 28.557v.25c0 16.044 12.039 28.817 27.469 28.817 15.835 0 27.217-12.903 27.217-28.552m-61.619 0v-.265c0-18.636 14.523-34.8 34.402-34.8 19.767 0 34.15 15.905 34.15 34.55v.25c0 18.646-14.523 34.824-34.401 34.824C86.393 512 72 496.086 72 477.44m83.548 0v-.264c0-18.636 14.874-34.8 33.92-34.8 12.52 0 20.35 5.728 26.615 12.255l-4.567 4.679c-5.74-5.853-12.27-10.941-22.183-10.941-15.129 0-26.87 12.643-26.87 28.557v.25c0 16.044 12.13 28.817 27.395 28.817 9.388 0 16.692-4.814 22.308-11.08l4.437 3.914c-6.785 7.686-14.88 13.173-27.135 13.173-19.18 0-33.92-15.914-33.92-34.56m128.046-3.39c-.915-13.422-8.611-25.816-23.88-25.816-13.188 0-23.358 11.08-24.537 25.816h48.417zm-55.21 3.27v-.274c0-19.294 13.584-34.67 31.586-34.67 18.666 0 30.54 15.12 30.54 34.8 0 1.179 0 1.573-.13 2.612h-55.203c1.179 16.563 13.044 26.21 26.107 26.21 10.296 0 17.352-4.56 22.825-10.426l4.438 3.914c-6.787 7.3-14.739 12.514-27.528 12.514-17.487 0-32.634-13.956-32.634-34.68zm126.634 8.016v-7.632c-5.649-1.439-13.135-3.009-22.731-3.009-14.202 0-22.091 6.3-22.091 15.627v.261c0 9.72 9.198 15.37 19.463 15.37 13.669 0 25.359-8.402 25.359-20.617m-51.654 5.635v-.257c0-13.93 11.957-21.809 29.32-21.809 9.325 0 15.769 1.187 22.213 2.902v-2.902c0-13.538-8.292-20.491-22.086-20.491-8.16 0-14.857 2.238-21.034 5.393l-2.371-5.66c7.365-3.406 14.6-5.77 23.802-5.77 9.063 0 16.292 2.49 21.16 7.355 4.47 4.467 6.837 10.64 6.837 18.916v41.772h-6.308v-11.168C350.295 505.686 342.009 512 329.26 512c-12.49 0-25.897-7.094-25.897-21.029m80.335-47.025h6.377v12.475c4.403-7.887 11.81-14.044 23.893-14.044 16.75 0 26.5 11.554 26.5 27.58v40.972h-6.363v-39.79c0-13.792-7.666-22.862-21.043-22.862-12.993 0-22.987 9.99-22.987 23.904v38.748h-6.377v-66.983zM119.129 179.41c0 10.944-8.864 19.821-19.815 19.821-10.942 0-19.816-8.877-19.816-19.82 0-10.944 8.874-19.812 19.816-19.812 10.95 0 19.816 8.868 19.816 19.811m314.912 0c0 10.944-8.875 19.821-19.811 19.821-10.946 0-19.821-8.877-19.821-19.82 0-10.944 8.875-19.812 19.82-19.812 10.937 0 19.812 8.868 19.812 19.811m-157.456 78.195c0 10.942-8.874 19.819-19.814 19.819-10.945 0-19.818-8.877-19.818-19.819 0-10.942 8.873-19.813 19.818-19.813 10.94 0 19.814 8.871 19.814 19.813m-79.264-38.558c0 10.939-8.869 19.816-19.818 19.816-10.945 0-19.814-8.877-19.814-19.816 0-10.948 8.87-19.816 19.814-19.816 10.95 0 19.818 8.868 19.818 19.816m157.456 0c0 10.939-8.873 19.816-19.813 19.816-10.95 0-19.819-8.877-19.819-19.816 0-10.948 8.87-19.816 19.819-19.816 10.94 0 19.813 8.868 19.813 19.816m-242.075 20.356c0 7.382-5.99 13.385-13.382 13.385-7.402 0-13.396-6.003-13.396-13.385 0-7.4 5.994-13.394 13.396-13.394 7.393 0 13.382 5.993 13.382 13.394m314.912 0c0 7.382-5.998 13.385-13.39 13.385-7.395 0-13.388-6.003-13.388-13.385 0-7.4 5.993-13.394 13.389-13.394 7.391 0 13.39 5.993 13.39 13.394m-157.457 79.25c0 7.396-6 13.398-13.384 13.398-7.389 0-13.394-6.002-13.394-13.399 0-7.39 6.005-13.379 13.394-13.379 7.383 0 13.384 5.988 13.384 13.38m-79.264-39.618c0 7.394-5.993 13.384-13.384 13.384-7.396 0-13.394-5.99-13.394-13.384 0-7.399 5.998-13.394 13.394-13.394 7.391 0 13.384 5.995 13.384 13.394m157.456 0c0 7.394-6.001 13.384-13.381 13.384-7.4 0-13.397-5.99-13.397-13.384 0-7.399 5.997-13.394 13.397-13.394 7.38 0 13.381 5.995 13.381 13.394m-242.075 7.486a6.962 6.962 0 11-13.925 0 6.957 6.957 0 016.965-6.955 6.956 6.956 0 016.96 6.955m314.912 0a6.962 6.962 0 11-13.925 0 6.955 6.955 0 016.965-6.955c3.838 0 6.96 3.112 6.96 6.955m-157.456 79.266c0 3.846-3.122 6.967-6.96 6.967a6.967 6.967 0 01-6.964-6.967 6.958 6.958 0 016.964-6.958 6.96 6.96 0 016.96 6.958m-79.263-39.627a6.967 6.967 0 01-6.965 6.962 6.966 6.966 0 01-6.96-6.962 6.96 6.96 0 016.96-6.962 6.961 6.961 0 016.965 6.962m157.456 0c0 3.841-3.123 6.962-6.96 6.962A6.96 6.96 0 01328 326.16a6.953 6.953 0 016.965-6.962 6.961 6.961 0 016.96 6.962m-58.912-299.38c0 14.792-11.991 26.777-26.771 26.777-14.795 0-26.786-11.985-26.786-26.777C229.456 11.99 241.447 0 256.242 0c14.78 0 26.77 11.99 26.77 26.779m0 79.263c0 14.79-11.99 26.778-26.77 26.778-14.795 0-26.786-11.988-26.786-26.778 0-14.786 11.991-26.778 26.786-26.778 14.78 0 26.77 11.992 26.77 26.778m0 78.197c0 14.784-11.99 26.774-26.77 26.774-14.795 0-26.786-11.99-26.786-26.774 0-14.793 11.991-26.783 26.786-26.783 14.78 0 26.77 11.99 26.77 26.783m157.457-78.197c0 14.79-11.99 26.778-26.776 26.778-14.792 0-26.78-11.988-26.78-26.778 0-14.786 11.988-26.778 26.78-26.778 14.787 0 26.776 11.992 26.776 26.778m-314.913 0c0 14.79-11.986 26.778-26.775 26.778C83.99 132.82 72 120.832 72 106.042c0-14.786 11.991-26.778 26.78-26.778 14.79 0 26.776 11.992 26.776 26.778M204.82 66.41c0 14.788-11.987 26.778-26.778 26.778-14.791 0-26.778-11.99-26.778-26.778 0-14.798 11.987-26.778 26.778-26.778 14.79 0 26.778 11.98 26.778 26.778m0 78.19c0 14.79-11.987 26.78-26.778 26.78-14.791 0-26.778-11.99-26.778-26.78 0-14.785 11.987-26.776 26.778-26.776 14.79 0 26.778 11.991 26.778 26.776m157.456-78.19c0 14.788-11.99 26.778-26.78 26.778-14.79 0-26.776-11.99-26.776-26.778 0-14.798 11.986-26.778 26.776-26.778s26.78 11.98 26.78 26.778m0 78.19c0 14.79-11.99 26.78-26.78 26.78-14.79 0-26.776-11.99-26.776-26.78 0-14.785 11.986-26.776 26.776-26.776s26.78 11.991 26.78 26.776\"\n        fill=\"#141414\"\n        fillRule=\"evenodd\"\n      />\n    </svg>\n  </Box>\n);\n\nconst Stat = ({ name, value }) => (\n  <Box direction=\"row\" gap=\"xxsmall\">\n    <Text size=\"xsmall\">{name}:</Text>\n    <Text size=\"xsmall\" color=\"brand\" weight={500}>\n      {value}\n    </Text>\n  </Box>\n);\n\nexport const Navbar = ({ dark, setDark }) => {\n  const { stats: _stats } = useContext(TokenContext);\n  const stats = [\n    { name: 'Tokens', value: _stats.totalTokens },\n    {\n      name: 'OCEAN Price',\n      value: amountFormatterUSD.format(_stats.oceanPrice),\n    },\n    {\n      name: 'OCEAN Market Cap',\n      value: amountFormatterUSD.format(_stats.oceanMarketCap),\n    },\n    {\n      name: 'Tokens Volume (24h)',\n      value: `${amountFormatterUSD.format(\n        _stats.dataTokensVolumeInOcean\n      )} (${amountFormatterTkn(_stats.dataTokensVolumeInOcean, 'OCEAN')})`,\n    },\n    {\n      name: 'Tokens Market Cap',\n      value: `${amountFormatterUSD.format(\n        _stats.totalMarketCap\n      )} (${amountFormatterTkn(_stats.totalMarketCapInOcean, 'OCEAN')})`,\n    },\n  ];\n\n  return (\n    <>\n      <Box\n        tag=\"header\"\n        pad={{ vertical: 'xsmall' }}\n        border={{ side: 'bottom', size: 'xsmall', color: 'light-3' }}\n      >\n        <Container>\n          <Box direction=\"row\" align=\"center\">\n            <Box direction=\"row\" gap=\"small\">\n              {stats.map((stat) => (\n                <Stat key={stat.name} name={stat.name} value={stat.value} />\n              ))}\n            </Box>\n          </Box>\n        </Container>\n      </Box>\n      <Box\n        tag=\"header\"\n        pad={{ vertical: 'small' }}\n        border={{ side: 'bottom', size: 'xsmall', color: 'light-3' }}\n      >\n        <Container>\n          <Box direction=\"row\" align=\"center\" justify=\"between\">\n            <Logo />\n            <PoweredBy />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n","import React, { useState, useContext, useEffect } from 'react';\nimport { navigate } from 'hookrouter';\nimport _ from 'lodash';\nimport * as Icons from 'grommet-icons';\nimport {\n  Avatar,\n  Box,\n  DataTable as GrommetDataTable,\n  Text,\n  TextInput,\n} from 'grommet';\nimport { dataTableColumns } from './DataTableColumns';\nimport { TokenContext } from '../App';\nimport Fuse from 'fuse.js';\n\nconst Search = ({ onSearch }) => {\n  const [search, setSearch] = useState('');\n\n  return (\n    <TextInput\n      placeholder=\"Search for tokens\"\n      size=\"small\"\n      style={{ padding: '5px', paddingLeft: '30px' }}\n      icon={<Icons.Search size=\"small\" />}\n      value={search}\n      onChange={(e) => {\n        setSearch(e.target.value);\n        onSearch(e.target.value);\n      }}\n    />\n  );\n};\n\nconst DataTableHeader = ({\n  pageNumber,\n  reachedEnd,\n  onPageChange,\n  onSearch,\n}) => {\n  return (\n    <Box direction=\"row\" justify=\"end\" align=\"center\" gap=\"medium\">\n      <Box direction=\"row\" gap=\"small\" align=\"center\">\n        <Avatar\n          onClick={pageNumber !== 1 ? () => onPageChange(pageNumber - 1) : null}\n          background={pageNumber !== 1 ? 'light-6' : 'light-2'}\n          size=\"small\"\n        >\n          <Icons.FormPrevious size=\"small\" />\n        </Avatar>\n        <Text size=\"xsmall\">Page {pageNumber}</Text>\n        <Avatar\n          onClick={!reachedEnd ? () => onPageChange(pageNumber + 1) : null}\n          background={!reachedEnd ? 'light-6' : 'light-2'}\n          size=\"small\"\n        >\n          <Icons.FormNext size=\"small\" />\n        </Avatar>\n      </Box>\n      <Box justify=\"center\">\n        <Search onSearch={onSearch} />\n      </Box>\n    </Box>\n  );\n};\n\nconst DataTable = () => {\n  const { allTokenList } = useContext(TokenContext);\n  const [filters, setFilters] = useState([\n    { low: 0, high: 10, property: 'price' },\n  ]);\n  const [tokenList, setTokenList] = useState(allTokenList);\n  const [pagedTokenList, setPagedTokenList] = useState(tokenList.slice(0, 20));\n  const [pageNumber, setPageNumber] = useState(1);\n  const [reachedEnd, setReachedEnd] = useState(tokenList.length <= 20);\n\n  const handlePageChange = (newPageNumber) => {\n    let start = 20 * (newPageNumber - 1);\n    let end = 20 * newPageNumber;\n    let reachedEnd = false;\n\n    if (start < tokenList.length) {\n      if (end > tokenList.length) {\n        end = tokenList.length;\n        reachedEnd = true;\n      }\n\n      setPagedTokenList(tokenList.slice(start, end));\n      setPageNumber(newPageNumber);\n      setReachedEnd(reachedEnd);\n    }\n  };\n\n  const sortList = ({ property, direction }) => {\n    const _tokenList = _(tokenList).orderBy(property, direction).value();\n    setTokenList(_tokenList);\n    setPagedTokenList(_tokenList.slice(0, 20));\n    setPageNumber(1);\n  };\n\n  const handleSearch = (search) => {\n    let filteredTokenList = allTokenList;\n\n    if (search !== '') {\n      const options = {\n        includeScore: true,\n        shouldSort: true,\n        distance: 100000,\n        keys: ['did', 'name', 'symbol', 'tags'],\n      };\n      filteredTokenList = new Fuse(allTokenList, options)\n        .search(search)\n        .map((_) => _.item);\n    }\n\n    // for (let filterIndex in filters) {\n    //   const { low, high, property } = filters[filterIndex];\n    //   filteredTokenList = filteredTokenList.filter(\n    //     (item) => item[property] >= low && item[property] <= high\n    //   );\n    // }\n\n    setTokenList(filteredTokenList);\n    setPageNumber(1);\n    setPagedTokenList(filteredTokenList.slice(0, 20));\n    setReachedEnd(filteredTokenList.length <= 20);\n  };\n\n  return (\n    <Box gap=\"small\">\n      <DataTableHeader\n        pageNumber={pageNumber}\n        reachedEnd={reachedEnd}\n        onPageChange={handlePageChange}\n        onSearch={handleSearch}\n      />\n      <Box align=\"center\">\n        <GrommetDataTable\n          pin\n          fill\n          sortable\n          columns={dataTableColumns}\n          data={pagedTokenList}\n          border={{ color: 'light-3', side: 'horizontal', size: 'xsmall' }}\n          onClickRow={({ datum }) => navigate(`/dmc/token/${datum.did}`)}\n          background={{\n            header: 'white',\n            body: 'light-1',\n            footer: 'light-1',\n          }}\n          pad={{ vertical: 'small', horizontal: 'medium' }}\n          sort={{ external: true }}\n          onSort={sortList}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default DataTable;\n","import React, { useContext } from 'react';\nimport Container from '../Components/Container';\nimport { Box, Text } from 'grommet';\nimport * as Icons from 'grommet-icons'; // TODO: only import necessary icons\nimport { TokenContext } from '../App';\nimport { amountFormatterUSD } from '../Components/DataTableColumns';\n\nimport DataTable from '../Components/DataTable';\n\nconst PercentChange = ({ value, postfix }) => (\n  <Box\n    direction=\"row\"\n    gap=\"xxsmall\"\n    align=\"center\"\n    round=\"xsmall\"\n    background={{\n      color: value < 0 ? 'status-critical' : 'status-ok',\n      opacity: 'strong',\n    }}\n    pad={{ horizontal: 'xsmall' }}\n  >\n    {value < 0 ? (\n      <Icons.Down color=\"white\" size=\"small\" />\n    ) : (\n      <Icons.Up color=\"white\" size=\"small\" />\n    )}\n\n    <Text size=\"small\" weight=\"bold\" color=\"white\">\n      {Math.abs(value)}\n      {postfix}\n    </Text>\n  </Box>\n);\n\nPercentChange.defaultProps = {\n  postfix: '',\n};\n\nconst Home = () => {\n  const { stats } = useContext(TokenContext);\n\n  return (\n    <Container margin={{ vertical: 'large' }}>\n      <Text size=\"large\" margin={{ vertical: 'small' }} weight=\"bold\">\n        Today's Token Prices by Market Cap\n      </Text>\n      <Box direction=\"row\" gap=\"xxsmall\">\n        <Text size=\"small\">\n          The global OCEAN market cap is{' '}\n          <strong>{amountFormatterUSD.format(stats.totalMarketCap)}</strong>, a\n        </Text>\n        <PercentChange value={9.8} postfix=\"%\" />\n        <Text size=\"small\">change over the last day.</Text>\n      </Box>\n      <Box margin={{ bottom: 'large', top: 'medium' }}>\n        <DataTable />\n      </Box>\n    </Container>\n  );\n};\n\nexport default Home;\n","import { Grid } from 'grommet';\n\nexport const PageWrapper = (props) => (\n  <Grid\n    fill\n    align=\"start\"\n    justifyContent=\"around\"\n    pad=\"large\"\n    gap=\"small\"\n    {...props}\n  ></Grid>\n);\n","import React from 'react';\nimport { Rewind } from 'grommet-icons';\nimport { A } from 'hookrouter';\n\nimport { Anchor, Box, Heading, WorldMap } from 'grommet';\nimport { PageWrapper } from '../Components/PageWrapper';\n\nexport const NotFound = () => (\n  <PageWrapper\n    rows={['full']}\n    columns={['60%', '40%']}\n    areas={[\n      { name: 'left', start: [0, 0], end: [0, 0] },\n      { name: 'right', start: [1, 0], end: [1, 0] },\n    ]}\n  >\n    <WorldMap\n      gridArea=\"left\"\n      color=\"neutral-2\"\n      onSelectPlace={(lat, lon) => {}}\n      selectColor=\"accent-2\"\n      hoverColor=\"accent-4\"\n    />\n    <Box gridArea=\"right\" alignContent=\"start\">\n      <Heading level=\"1\" margin=\"xsmall\">\n        Oops. Page Not Found.\n      </Heading>\n      <Heading level=\"2\" margin={{ horizontal: 'none', vertical: 'large' }}>\n        Lost?\n      </Heading>\n      <Anchor\n        as={A}\n        icon={<Rewind />}\n        label=\"Back to HomeOld Page\"\n        href=\"/dmc\"\n      />\n    </Box>\n  </PageWrapper>\n);\n","import React, { useState, useEffect, useContext } from 'react';\nimport Chart from 'kaktana-react-lightweight-charts';\nimport { ThemeContext } from 'grommet';\n\nexport const DataGraph = ({ symbol, darkTheme }) => {\n  const theme = useContext(ThemeContext);\n\n  const options = {\n    alignLabels: true,\n    priceScale: {\n      position: 'left',\n      mode: 0,\n      autoScale: true,\n    },\n    layout: {\n      backgroundColor: theme.global.colors['light-1'],\n      textColor: theme.dark ? '#FBC2FF' : '#3E5C76',\n      fontSize: 12,\n      fontFamily: 'Calibri',\n    },\n    grid: {\n      vertLines: {\n        color: theme.global.colors.brand,\n        style: 1,\n        visible: true,\n      },\n      horzLines: {\n        color: theme.global.colors.brand,\n        style: 1,\n        visible: true,\n      },\n    },\n    localization: {\n      // timeFormatter: (businessDayOrTimestamp) => {\n      //   console.log(businessDayOrTimestamp);\n      //   if (isBusinessDay(businessDayOrTimestamp)) {\n      //     return businessDayOrTimestamp;\n      //   }\n      //   return 'Format for timestamp';\n      // },\n    },\n    timeScale: {\n      rightOffset: 8,\n      fixLeftEdge: true,\n      lockVisibleTimeRangeOnResize: true,\n      rightBarStaysOnScroll: true,\n\n      //   timeVisible: true,\n      //   secondsVisible: false,\n    },\n  };\n\n  const [areaSeries, setAreaSeries] = useState();\n\n  const handleData = (res) =>\n    res.prices.map((c) => ({ time: new Date(c[0]).toJSON(), value: c[1] }));\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // console.log('fetching new data');\n\n      const graphOptions = {\n        lineColor: '#EF8275',\n        bottomColor: '#54414E',\n        topColor: '#F68D94',\n        lineWidth: 3,\n        title: `${symbol}/USD`,\n      };\n\n      const res = await fetch(\n        `https://api.coingecko.com/api/v3/coins/${symbol.toLowerCase()}/market_chart?vs_currency=usd&days=360&interval=daily`\n      );\n      res\n        .json()\n        .then((res) =>\n          setAreaSeries([\n            {\n              data: handleData(res),\n              options: graphOptions,\n            },\n          ])\n        )\n        .catch((err) => console.log(err));\n    };\n    fetchData();\n  }, [symbol]);\n\n  return (\n    <Chart\n      options={options}\n      areaSeries={areaSeries}\n      autoWidth\n      darkTheme={darkTheme}\n    />\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Text,\n  Heading,\n  Paragraph,\n  Anchor,\n  Markdown,\n  Table,\n  TableHeader,\n  TableRow,\n  TableCell,\n  TableBody,\n} from 'grommet';\nimport { DataGraph } from '../Components/DataGraph';\nimport Container from '../Components/Container';\nimport {\n  amountFormatterTkn,\n  amountFormatterUSD,\n} from '../Components/DataTableColumns';\nimport * as Icons from 'grommet-icons';\n\nexport const getRandomColor = () => {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n\nconst TokenDetail = ({ icon, value, href }) => (\n  <Box direction=\"row\" gap=\"small\" align=\"center\">\n    {icon}\n    {href ? (\n      <Anchor href={href} size=\"small\" target=\"_blank\">\n        {value}\n      </Anchor>\n    ) : (\n      <Text size=\"small\" truncate>\n        {value}\n      </Text>\n    )}\n  </Box>\n);\n\nexport const Token = ({ did, ...props }) => {\n  const [tokenDetails, setTokenDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setErrors] = useState(false);\n\n  const handleData = (res) => setTokenDetails(res);\n  console.log('tokenDetails:', tokenDetails);\n\n  useEffect(() => {\n    (async () => {\n      const res = await fetch(\n        `https://data-marketcap-backend.herokuapp.com/datatoken/${did}`\n      );\n      res\n        .json()\n        .then((res) => handleData(res))\n        .then(() => setIsLoading(false))\n        .catch((err) => setErrors(err));\n    })();\n  }, [did]);\n\n  return (\n    <Container margin={{ vertical: 'large' }}>\n      {isLoading ? (\n        <Text size=\"small\">Loading...</Text>\n      ) : hasError ? (\n        <Text size=\"small\">Error</Text>\n      ) : (\n        <Box direction=\"row\" margin={{ vertical: 'small' }} gap=\"large\">\n          <Box gap=\"medium\" width={{ max: '500px', min: '500px' }}>\n            <Box\n              direction=\"row\"\n              gap=\"xsmall\"\n              align=\"baseline\"\n              width={{ max: '500px', min: '500px' }}\n            >\n              <Text size=\"large\" weight=\"bold\">\n                {tokenDetails.name}\n              </Text>\n              <Text color=\"dark-6\" size=\"small\" weight=\"bold\">\n                ({tokenDetails.symbol})\n              </Text>\n            </Box>\n\n            <Box>\n              <TokenDetail\n                icon={<Icons.User size=\"small\" />}\n                value={tokenDetails.author}\n              />\n              <TokenDetail\n                icon={<Icons.Clock size=\"small\" />}\n                value={new Date(tokenDetails.createdAt).toLocaleString()}\n              />\n              <TokenDetail\n                icon={<Icons.Host size=\"small\" />}\n                value={tokenDetails.datasetName}\n              />\n              <TokenDetail\n                icon={<Icons.Map size=\"small\" />}\n                href={`https://etherscan.io/address/${tokenDetails.address}`}\n                value={tokenDetails.address}\n              />\n            </Box>\n\n            <Box border={{ color: 'light-3', size: 'small', side: 'bottom' }} />\n\n            <Box>\n              <Text size=\"large\" weight=\"bold\">\n                Description\n              </Text>\n              <Markdown\n                components={{\n                  p: {\n                    props: { size: 'small' },\n                  },\n                }}\n              >\n                {tokenDetails.description}\n              </Markdown>\n            </Box>\n          </Box>\n\n          <Box gap=\"medium\" flex=\"grow\">\n            <Box direction=\"row\" gap=\"medium\">\n              <Box direction=\"row\" gap=\"xsmall\" align=\"baseline\">\n                <Text size=\"large\">\n                  {amountFormatterUSD.format(tokenDetails.price)}\n                </Text>\n                <Text color=\"dark-6\" size=\"small\">\n                  (USD)\n                </Text>\n              </Box>\n              <Box direction=\"row\" gap=\"xsmall\" align=\"baseline\">\n                <Text size=\"large\">\n                  {amountFormatterTkn(tokenDetails.priceOcean, '')}\n                </Text>\n                <Text color=\"dark-6\" size=\"small\">\n                  OCEAN\n                </Text>\n              </Box>\n            </Box>\n\n            <Box align=\"start\">\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableCell scope=\"col\" border=\"bottom\">\n                      <Text size=\"small\" color=\"dark-6\" weight=\"bold\">\n                        Market Cap\n                      </Text>\n                    </TableCell>\n                    <TableCell scope=\"col\" border=\"bottom\">\n                      <Text size=\"small\" color=\"dark-6\" weight=\"bold\">\n                        Circulating Supply\n                      </Text>\n                    </TableCell>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  <TableRow>\n                    <TableCell scope=\"row\">\n                      <Box gap=\"xsmall\">\n                        <Text weight=\"bold\">\n                          {amountFormatterUSD.format(tokenDetails.marketCap)}\n                        </Text>\n                        <Text size=\"small\" color=\"dark-6\">\n                          {amountFormatterTkn(\n                            tokenDetails.marketCap *\n                              (tokenDetails.price / tokenDetails.priceOcean),\n                            'OCEAN'\n                          )}\n                        </Text>\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      <Text>\n                        {amountFormatterTkn(\n                          tokenDetails.circulatingSupply,\n                          tokenDetails.symbol\n                        )}\n                      </Text>\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </Box>\n\n            <Box>\n              <DataGraph symbol=\"bitcoin\" />\n            </Box>\n          </Box>\n        </Box>\n      )}\n    </Container>\n  );\n};\n","import React, { useState, useEffect, createContext } from 'react';\n\nimport { useRoutes } from 'hookrouter';\nimport _ from 'lodash';\nimport { Box, Grommet, Text } from 'grommet';\nimport { grommet } from 'grommet/themes';\n\nimport { Navbar } from './Components/Navbar';\nimport Home from './Pages/Home';\nimport { NotFound } from './Pages/NotFound';\nimport { Token } from './Pages/Token';\n\nconst routes = {\n  '/': () => <Home />,\n  '/dmc': () => <Home />,\n  '/dmc/': () => <Home />,\n  '/dmc/token/:did/': ({ did }) => <Token did={did} />,\n  '/dmc/token/:did': ({ did }) => <Token did={did} />,\n  '/token/:did/': ({ did }) => <Token did={did} />,\n  '/token/:did': ({ did }) => <Token did={did} />,\n};\n\nexport const TokenContext = createContext({});\n\nconst App = () => {\n  const [allTokenList, setAllTokenList] = useState([]);\n  const [stats, setStats] = useState({});\n  const [dark, setDark] = useState(false);\n  const match = useRoutes(routes);\n\n  const fetchData = async () => {\n    const res = await fetch(\n      `https://data-marketcap-backend.herokuapp.com/datatokens`\n    );\n    res\n      .json()\n      .then((res) => {\n        setAllTokenList(_(res[0]).orderBy('marketCap', 'desc').value());\n        const {\n          dataTokensMarketCap,\n          dataTokensVolume,\n          oceanMarketCap,\n          oceanPrice,\n        } = res[1];\n\n        setStats({\n          totalTokens: res[0].length,\n          oceanPrice,\n          oceanMarketCap,\n          dataTokensVolume,\n          dataTokensVolumeInOcean: dataTokensVolume / oceanPrice,\n          totalMarketCap: dataTokensMarketCap,\n          totalMarketCapInOcean: dataTokensMarketCap / oceanPrice,\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  console.log(stats);\n  useEffect(() => fetchData(), []);\n\n  return (\n    <Grommet theme={grommet} cssVars full themeMode={dark ? 'dark' : 'light'}>\n      {allTokenList.length > 0 ? (\n        <TokenContext.Provider value={{ allTokenList, stats }}>\n          <Navbar dark={dark} setDark={setDark} />\n          <Box background=\"light-1\">{match || <NotFound />}</Box>\n        </TokenContext.Provider>\n      ) : (\n        <Box height=\"100vh\" align=\"center\" justify=\"center\">\n          <Text size=\"small\">Loading...</Text>\n        </Box>\n      )}\n    </Grommet>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}