{"version":3,"sources":["Components/Navbar.jsx","Components/data.js","Components/DataTable.jsx","Components/PageWrapper.jsx","Pages/Home.jsx","Pages/NotFound.jsx","Components/DataGraph.jsx","Pages/Token.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","dark","setDark","Box","tag","direction","align","justify","background","pad","left","right","vertical","elevation","style","zIndex","Anchor","as","A","label","href","Clock","type","Button","onClick","icon","Solaris","Moon","amountFormatterUSD","Intl","NumberFormat","currency","minimumFractionDigits","amountFormatterTkn","prop","symbol","format","columns","property","header","primary","render","datum","price","market_cap","volume_tkn","supply","DATA","name","volume","MyDataTable","props","horizontal","DataTable","map","c","search","onClickRow","e","navigate","data","body","light","footer","pin","fill","sortable","resizeable","PageWrapper","Grid","justifyContent","gap","Home","rows","areas","start","end","gridArea","Heading","level","NotFound","WorldMap","color","onSelectPlace","lat","lon","selectColor","hoverColor","alignContent","margin","Rewind","DataGraph","graphOptions","lineColor","bottomColor","topColor","lineWidth","title","useState","areaSeries","setAreaSeries","handleData","useContext","ThemeContext","res","prices","time","Date","toJSON","value","fetchData","a","fetch","json","then","options","catch","err","console","log","useEffect","alignLabels","priceScale","position","mode","autoScale","layout","backgroundColor","textColor","fontSize","fontFamily","grid","vertLines","visible","horzLines","localization","timeScale","rightOffset","fixLeftEdge","lockVisibleTimeRangeOnResize","rightBarStaysOnScroll","autoWidth","darkTheme","getRandomColor","i","Math","floor","random","Token","otherDetails","tokenDetails","setTokenDetails","setErrors","description","priceOcean","Object","entries","index","arr","dataKey","dataValue","Text","size","str","replace","charAt","toUpperCase","slice","routes","App","match","useRoutes","Grommet","theme","grommet","cssVars","full","themeMode","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.dac5644f.chunk.js","sourcesContent":["import React from 'react';\nimport { Anchor, Button, Box, Clock, Text } from 'grommet';\nimport { A } from 'hookrouter';\n\nimport { Solaris, Moon } from 'grommet-icons';\n\nexport const Navbar = ({ dark, setDark }) => (\n  <Box\n    tag=\"header\"\n    direction=\"row\"\n    align=\"center\"\n    justify=\"between\"\n    background=\"brand\"\n    pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n    elevation=\"medium\"\n    style={{ zIndex: '1' }}\n  >\n    <Anchor as={A} label=\" Data Market Cap \" href=\"/\" />\n    <Clock type=\"digital\" />\n    <Button\n      onClick={() => {\n        setDark(!dark);\n      }}\n      icon={dark ? <Solaris /> : <Moon />}\n    ></Button>\n  </Box>\n);\n","const amountFormatterUSD = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  minimumFractionDigits: 2,\n});\n\nconst amountFormatterTkn = (prop, symbol) => {\n  const formatter = new Intl.NumberFormat('en-US', {});\n  return formatter.format(prop) + ' ' + symbol;\n};\n\nexport const columns = [\n  { property: '#', header: '#' },\n  {\n    property: 'name',\n    header: 'Name',\n    primary: true,\n  },\n  {\n    property: 'symbol',\n    header: 'Symbol',\n  },\n  {\n    property: 'price',\n    header: 'Price',\n    render: (datum) => amountFormatterUSD.format(datum.price),\n    align: 'end',\n  },\n  {\n    property: 'market_cap',\n    header: 'Market Cap',\n    render: (datum) => amountFormatterUSD.format(datum.market_cap),\n    align: 'end',\n  },\n  {\n    property: 'volume_tkn',\n    header: 'Volume (Token)',\n    align: 'end',\n    render: (datum) => amountFormatterTkn(datum.volume_tkn, datum.symbol),\n  },\n  {\n    property: 'supply',\n    header: 'Circulating Supply',\n    align: 'end',\n    render: (datum) => amountFormatterTkn(datum.supply, datum.symbol),\n  },\n];\n\nexport const DATA = [\n  {\n    '#': 1,\n    name: 'Bitcoin',\n    symbol: 'BTC',\n    price: 12988.7,\n    market_cap: 240588780100,\n    volume: 35160306261,\n    volume_tkn: 2706993,\n    supply: 18522937,\n  },\n  {\n    '#': 2,\n    name: 'Ethereum',\n    symbol: 'ETH',\n    price: 414.7,\n    market_cap: 46900712085,\n    volume: 17536640518,\n    volume_tkn: 42287289,\n    supply: 113094863,\n  },\n  {\n    '#': 3,\n    name: 'Tether',\n    symbol: 'USDT',\n    price: 1.0,\n    market_cap: 15915671167,\n    volume: 53167090652,\n    volume_tkn: 53105346094,\n    supply: 15897187815,\n  },\n  {\n    '#': 4,\n    name: 'XRP',\n    symbol: 'XRP',\n    price: 0.258227,\n    market_cap: 11684254010,\n    volume: 2757357405,\n    volume_tkn: 10678052443,\n    supply: 45248061374,\n  },\n  {\n    '#': 5,\n    name: 'Bitcoin Cash',\n    symbol: 'BCH',\n    price: 268.53,\n    market_cap: 4981670432,\n    volume: 3143494100,\n    volume_tkn: 11706476,\n    supply: 18551906,\n  },\n  {\n    '#': 6,\n    name: 'Chainlink',\n    symbol: 'LINK',\n    price: 12.17,\n    market_cap: 4727101353,\n    volume: 1653108056,\n    volume_tkn: 135865138,\n    supply: 388509556,\n  },\n  {\n    '#': 7,\n    name: 'Binance Coin',\n    symbol: 'BNB',\n    price: 30.87,\n    market_cap: 4458028484,\n    volume: 533529866,\n    volume_tkn: 17282351,\n    supply: 144406561,\n  },\n];\n","import React from 'react';\nimport { navigate } from 'hookrouter';\n\nimport { Box, DataTable } from 'grommet';\nimport { columns, DATA } from './data';\n\nexport const MyDataTable = (props) => {\n  return (\n    <Box align=\"center\" pad={{ horizontal: 'none', vertical: 'small' }}>\n      <DataTable\n        columns={columns.map((c) => ({\n          ...c,\n          search: c.property === 'name' || c.property === 'symbol',\n        }))}\n        onClickRow={(e) => {\n          navigate(`/token/${e.datum.name}`);\n        }}\n        data={DATA}\n        pad={{\n          body: 'medium',\n        }}\n        background={{\n          header: {\n            dark: 'neutral-1',\n            light: 'neutral-3',\n          },\n          body: [\n            { light: 'light-2', dark: 'dark-2' },\n            { light: 'light-3', dark: 'dark-3' },\n          ],\n          footer: {\n            dark: 'dark-3',\n            light: 'light-3',\n          },\n        }}\n        pin\n        fill\n        sortable\n        resizeable\n      />\n    </Box>\n  );\n};\n","import { Grid } from 'grommet';\n\nexport const PageWrapper = (props) => (\n  <Grid\n    fill\n    align=\"start\"\n    justifyContent=\"around\"\n    pad=\"large\"\n    gap=\"small\"\n    {...props}\n  ></Grid>\n);\n","import React from 'react';\nimport { A } from 'hookrouter';\n\nimport { Anchor, Box, Heading, Grid } from 'grommet';\nimport { MyDataTable } from '../Components/DataTable';\nimport { PageWrapper } from '../Components/PageWrapper';\n\nexport const Home = () => (\n  <PageWrapper\n    rows={['full']}\n    columns={['15%', '70%', '15%']}\n    areas={[{ name: 'middle', start: [1, 0], end: [1, 0] }]}\n  >\n    <Box gridArea=\"middle\">\n      <Heading level=\"3\">Top Data Tokens Today: </Heading>\n      <MyDataTable></MyDataTable>\n    </Box>\n  </PageWrapper>\n);\n","import React from 'react';\nimport { Rewind } from 'grommet-icons';\nimport { A } from 'hookrouter';\n\nimport { Anchor, Box, Heading, Grid, WorldMap } from 'grommet';\nimport { PageWrapper } from '../Components/PageWrapper';\n\nexport const NotFound = () => (\n  <PageWrapper\n    rows={['full']}\n    columns={['60%', '40%']}\n    areas={[\n      { name: 'left', start: [0, 0], end: [0, 0] },\n      { name: 'right', start: [1, 0], end: [1, 0] },\n    ]}\n  >\n    <WorldMap\n      gridArea=\"left\"\n      color=\"neutral-2\"\n      onSelectPlace={(lat, lon) => {}}\n      selectColor=\"accent-2\"\n      hoverColor=\"accent-4\"\n    />\n    <Box gridArea=\"right\" alignContent=\"start\">\n      <Heading level=\"1\" margin=\"xsmall\">\n        Oops. Page Not Found.\n      </Heading>\n      <Heading level=\"2\" margin={{ horizontal: 'none', vertical: 'large' }}>\n        Lost?\n      </Heading>\n      <Anchor as={A} icon={<Rewind />} label=\"Back to Home Page\" href=\"/\" />\n    </Box>\n  </PageWrapper>\n);\n","import React, { useState, useEffect, useContext } from 'react';\nimport Chart from 'kaktana-react-lightweight-charts';\nimport { Button, defaultProps, ThemeContext } from 'grommet';\n\nexport const DataGraph = ({ symbol }) => {\n  const graphOptions = {\n    lineColor: 'white',\n    bottomColor: 'goldenrod',\n    topColor: 'red',\n    lineWidth: 3,\n    title: 'BTC/USD',\n  };\n\n  const options = {\n    alignLabels: true,\n    priceScale: {\n      position: 'left',\n      mode: 0,\n      autoScale: true,\n    },\n    layout: {\n      backgroundColor: '#FAEBD7',\n      textColor: '#696969',\n      fontSize: 12,\n      fontFamily: 'Calibri',\n    },\n    grid: {\n      vertLines: {\n        color: 'rgba(70, 130, 180, 0.5)',\n        style: 1,\n        visible: true,\n      },\n      horzLines: {\n        color: 'rgba(70, 130, 180, 0.5)',\n        style: 1,\n        visible: true,\n      },\n    },\n    localization: {\n      // timeFormatter: (businessDayOrTimestamp) => {\n      //   console.log(businessDayOrTimestamp);\n      //   if (isBusinessDay(businessDayOrTimestamp)) {\n      //     return businessDayOrTimestamp;\n      //   }\n      //   return 'Format for timestamp';\n      // },\n    },\n    timeScale: {\n      rightOffset: 8,\n      fixLeftEdge: true,\n      lockVisibleTimeRangeOnResize: true,\n      rightBarStaysOnScroll: true,\n\n      //   timeVisible: true,\n      //   secondsVisible: false,\n    },\n  };\n\n  const [areaSeries, setAreaSeries] = useState();\n  const theme = useContext(ThemeContext);\n\n  const handleData = (res) =>\n    res.prices.map((c) => ({ time: new Date(c[0]).toJSON(), value: c[1] }));\n\n  const fetchData = async () => {\n    // console.log('fetching new data');\n    const res = await fetch(\n      `https://api.coingecko.com/api/v3/coins/${symbol}/market_chart?vs_currency=usd&days=360&interval=daily`\n    );\n    res\n      .json()\n      .then((res) =>\n        setAreaSeries([\n          {\n            data: handleData(res),\n            options: graphOptions,\n          },\n        ])\n      )\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => fetchData(), []);\n  return (\n    <Chart options={options} areaSeries={areaSeries} autoWidth darkTheme />\n  );\n};\n","import React, { useState, useEffect } from 'react';\n// import { A } from 'hookrouter';\n\nimport { Box, Heading, Distribution, Text } from 'grommet';\nimport { DataGraph } from '../Components/DataGraph';\nimport { PageWrapper } from '../Components/PageWrapper';\n\nconst getRandomColor = () => {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n\nconst convertCase = (str) => {\n  str = str.replace(/([A-Z]+)/g, ' $1');\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\nexport const Token = ({ symbol, ...props }) => {\n  const [tokenDetails, setTokenDetails] = useState({\n    symbol,\n    props,\n    otherDetails: [],\n  });\n  const [hasError, setErrors] = useState(false);\n\n  const handleData = (res) => {\n    let { name, price, description, priceOcean, ...otherDetails } = res;\n\n    otherDetails = Object.entries(otherDetails).map(\n      ([dataKey, dataValue], index, arr) => {\n        return {\n          color: getRandomColor(),\n          dataKey,\n          dataValue,\n        };\n      }\n    );\n\n    setTokenDetails({\n      name,\n      price,\n      description,\n      priceOcean,\n      otherDetails,\n    });\n  };\n\n  const fetchData = async () => {\n    const res = await fetch('http://localhost:8080/test.json');\n    res\n      .json()\n      .then((res) => handleData(res))\n      .catch((err) => setErrors(err));\n  };\n\n  useEffect(() => fetchData(), []);\n\n  return (\n    <PageWrapper\n      rows={['10%', '90%']}\n      columns={['70%', '30%']}\n      areas={[\n        { name: 'top', start: [0, 0], end: [1, 0] },\n        { name: 'left', start: [0, 1], end: [0, 1] },\n        { name: 'right', start: [1, 1], end: [1, 1] },\n      ]}\n    >\n      <Box gridArea=\"top\" direction=\"row\">\n        <Box pad=\"medium\" background={getRandomColor()} fill>\n          <Text size=\"large\"> Name: {tokenDetails.name}</Text>\n        </Box>\n        <Box pad=\"medium\" background={getRandomColor()} fill>\n          <Text size=\"large\"> Symbol: {symbol}</Text>\n        </Box>\n        <Box pad=\"medium\" background={getRandomColor()} fill>\n          <Text size=\"large\">Price: {tokenDetails.price} USD</Text>\n        </Box>\n        <Box pad=\"medium\" background={getRandomColor()} fill>\n          <Text size=\"large\"> Price: {tokenDetails.priceOcean} Ocean</Text>\n        </Box>\n      </Box>\n      <Box gridArea=\"left\" fill>\n        <DataGraph symbol={symbol} />\n        <Box pad=\"medium\" background={getRandomColor()} fill>\n          <Text size=\"large\">Description</Text>\n          <Text size=\"small\">{tokenDetails.description}</Text>\n        </Box>\n      </Box>\n      <Box gridArea=\"right\">\n        {tokenDetails.otherDetails.map((property) => (\n          <Box\n            pad=\"medium\"\n            background={property.color}\n            key={property.dataKey}\n            fill\n          >\n            <Text size=\"large\">{convertCase(property.dataKey)}</Text>\n            <Text size=\"medium\">{property.dataValue}</Text>\n          </Box>\n        ))}\n      </Box>\n    </PageWrapper>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { useRoutes } from 'hookrouter';\n\nimport { Grommet } from 'grommet';\nimport { grommet } from 'grommet/themes';\n\nimport { Navbar } from './Components/Navbar';\nimport { Home } from './Pages/Home';\nimport { NotFound } from './Pages/NotFound';\nimport { Token } from './Pages/Token';\n\nconst routes = {\n  '/': () => <Home />,\n  '/about': () => <NotFound />,\n  '/token/:symbol': ({ symbol }) => <Token symbol={symbol} />,\n};\n\nconst App = () => {\n  const match = useRoutes(routes);\n  const [dark, setDark] = useState(false);\n\n  return (\n    <Grommet theme={grommet} cssVars full themeMode={dark ? 'dark' : 'light'}>\n      <Navbar dark={dark} setDark={setDark} />\n      {match || <NotFound />}\n    </Grommet>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}